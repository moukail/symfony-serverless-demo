# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
    #################################
    #    Stage 2 - Build            #
    #################################
    #  To automatically get bug fixes and new Php versions for shivammathur/setup-php,
    # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        #extensions: mbstring, intl
        #coverage: xdebug
        tools: symfony, codeception
      #env:
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@v4
    - name: Copy .env.test.local
      run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    #################################
    #    Stage 2 - Code Analysis    #
    #################################
    - name: Code Style Fixer
      run: composer phpcsfixer
    - name: Static Code Analysis
      run: composer phpstan

    #################################
    #    Stage 3 - Tests            #
    #################################
    - name: Create Database
      run: |
        mkdir -p data
        touch data/database.sqlite

    - name: Start local server
      run: symfony local:server:start --daemon

    - name: Unit tests
      env:
        APP_SECRET: e5451c87915bfd9c0f8c28c0e62150bb
        DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
      run: codecept run Unit
    #- name: Functional tests
    #  env:
    #    DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
    #  run: codecept run Functional
    #- name: Acceptance tests
    #  env:
    #    DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
    #  run: codecept run Acceptance
    #################################
    #    Stage 4 - Deploy           #
    #################################
    - name: Remove Dev Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-dev --optimize-autoloader
    - name: Deploy to AWS Lambda
      uses: serverless/github-action@v3
      with:
        args: -c "cd ./web && serverless plugin install --name serverless-lift && serverless deploy --stage=prod"
        entrypoint: /bin/sh
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
